CHANGES AFTER 2013-01-23 recorded on GitHub, https://github.com/nescitus/rodent_code/commits/

2013-01-20: less cluttered display of search lines in console mode

2013-01-19: color-independent EvalPatterns() (currently only code for a knight blocking c-pawn moved there)

2013-01-17

- iid at cut nodes failed very narrowly (47,2 %)
- removed useFutility and useLmr variables, as they are practically always on and user can
  switch them off by setting lmrBase or futilityDepth

2013-01-16

- fixed silly sign bug in go nodes command
- internal iterative deepening at cut nodes passed self-play test and awaits for a gauntlet

2013-01-15: node type detection based on Fruit

2013-01-13

- shorter and marginally faster code for endgame knowledge
- bugfix (drawn KBPKB was not evaluated as 0 due to scaling opposite bishops first)
- bugfix in bench (history has not been cleared)

2013-01-09

- hanging pieces: 47,3% / 2249 games) 
- bench command implemented

2013-01-07

- failed attempts at tuning (at least several parameters' ranges are narrowed down) 
- FAILED with not evaluating the least advanced of double passed pawns
- FAILED applying candidate passer eval to all non-weak pawns
- moved perft rotines to a separate file
- removed book verification code

2013-01-06

- piece pairs tuning at fixed nodes DOESN'T HELP AT LONGER TIME CONTROLS
- variables "nodes" and "rootDepth" moved to sSearch class

2013-01-05

- FAILED with attacks on loose enemy pieces (44,5%/ 2300 games), even though it wins in self-test
- perft utility

2013-01-04

- FAILED attempt to implement piece lists (no speed gain and random effect on move ordering 
  is detrimental)

2013-01-03

- FAILED with pawn pst emphasizing center (45,5% / 2200 games)
- implemented "go movetime" and "go nodes" commands

2013-01-02: FAILED with simultaneous pawn pst change and attackable knight eval (44,2% / 2100 games)

2012-12-xx: FAILED with razoring a la DiscoCheck (perhaps better qs would be needed)

2012-12-30: aspiration window correction: 46,5% / 2000 games

2012-12-25: Eval pruning similar to that of DiscoCheck replaces Static null move: 46,2% / 2440 games

2012-12-21

- two bugfixes in material evaluation (but score not changed)
- restructuring material evaluation, which so far mixed two things; 
  now we have EvalMaterial() which does all the material adjustements 
  and CheckmateHelper() for pushing enemy king towards the rim and KBNK stuff

2012-12-20: confirmed that midgame eval of candidate passers is useful

2012-12-19: first attempt at candidate passer eval already gains a little: 46,0% / 1740 games

2012-12-18

- simplifying some code

2012-12-17

- failed with using History.MoveIsBad() as additional sorting criterion
- found a bug in pawn center evaluation
- coded pawn phalanx eval, but together with bugfix score drops to 45,3% / 2540 games

2012-12-16

- testing two null move alternatives ( different new depth formula saved in comments
  and reducing more when difference between static eva and beta is big)
  no improvement and no weakening from either of these formulas, so we stay conservative

2012-12-15: null move fix 45,7% / 2330 games

2012-12-14

- returning to work on Rodent
- overnight gauntlet 15s/game: 45,3% / 2340 games
- shrinking code initializing bad bishop mask (no functional change)

2012-10-09

- speedup due to different updating scheme of reversible moves counter (thx Kestutis Gasaitis!)
- failed with Kestitis' suggestion that reduction of null move verification search is too big  

2012-10-07: fixed sign bug in "checkmate help" in eval.material, added code for KBNK mate

2012-10-03: reporting nps every now and then in verbose mode

2012-10-02: separating strength and style settings

2012-09-24: faster function for loading just a move fom TT used in internal iterative deepening (thx Kestutis)

2012-09-21: pawn shelter halved on 4 central files (new gauntlet: 45,4%, 2172 games)

2012-09-14: changing tt date of used entries (thx Kestutis)

2012-09-12

- FIXED node discrepancy between debug and release version, but score fell to 33,8%
- FAILED to get speed increase from saving pst scores

2012-09-10

- small speedup due to different updating scheme of remaining moves
- separating sManipulator class for doing/undoing moves

2012-09-07: refined score stays

2012-09-05: determined that full eval for null move is better

2012-09-03: FAILED with two set of values for candidate passers

2012-09-02: FAILED with pawn phalanx code, should try again with different values

2012-08-28: reimplementing book loading and personality loading

2012-08-27: detection of missing book moves separated into a function and applied also in out of book positions

2012-08-25

- FAILED with king danger table
- opening book detects alternative moves leading to book positions (on finding a move only)

2012-08-23: FAILED change location of a line keeping history score within bounds

2012-08-22: PASSED narrowly with using hash information for sorting qs moves (thx Kestutis Gasaitis!)

2012-08-21: FAILED with null move verification (but added Kestutis' ply bugfix)

2012-08-18: FIXED side to move error that switched off black trapped bishop value

2012-08-17

- modified value returned by static null move /9thx Kestutis!)
- book utility converting e2e4e7e5g1f3b8c6 into e2e4 e7e5 g1f3 b8c6

16-08-2012

- no TT save of a null move result if we already have a hash move (thx Kestutis Gasaitis!)
- moved IID code after null move (doesn't matter right now, but improves future options, thx Kestutis)

2012-08-14

- FAILED with Fruit values for pawn storm
- re-implemented learning code

2012-08-07

- rewriting delta pruning code - result is the same, but code is more tunable
- FAILED with no TT in QS: 27,3%
- NO CHANGE, FAILED no delta pruning in PV QS nodes
- FAILED adding pawn delta = 100: 27,6% (is it a NPS thing?)
- FIXED sign error in Eval::Normalize() (thx Kestutis!)

2012-08-06

- returning to the highest-rated version 0.13 due to steady rating decline 
  caused by changes from the last three months
- promising oneself to test against Fruit instead of incesttesting against previous versions
- fixed small bug in Normalize() function (thx Kestutis)
- removing unused EvalPassers() function (all pawn eval is now hashed)
- fixing bad THREE_Q_PLY declaration and using real value of 1.25 ply for calculating LMR depth 
  (no strength change but no error source - thx Kestutis)
- adding parser features from discarded version
- TESTING to estimate base score vs Fruit: 28,6%

2012-03-12: BUGFIX in SetMoveTiming(), constraints on maxMoveTime